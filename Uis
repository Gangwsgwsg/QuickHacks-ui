local QuickHacksUI = {}
QuickHacksUI.__index = QuickHacksUI

function QuickHacksUI.new()
    local self = setmetatable({}, QuickHacksUI)
    self.RainbowColorValue = 0
    self.HueSelectionPosition = 0
    
    local ui = Instance.new("ScreenGui")
    ui.Name = "QuickHacksUI"
    ui.Parent = game.CoreGui
    ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    self.ui = ui
    self.PresetColor = Color3.fromRGB(44, 120, 224)
    self.CurrentUIBackgroundColor = Color3.fromRGB(30, 30, 30)
    
    coroutine.wrap(function()
        while wait() do
            self.RainbowColorValue = self.RainbowColorValue + 1 / 255
            self.HueSelectionPosition = self.HueSelectionPosition + 1
            if self.RainbowColorValue >= 1 then self.RainbowColorValue = 0 end
            if self.HueSelectionPosition == 80 then self.HueSelectionPosition = 0 end
        end
    end)()
    
    return self
end

function QuickHacksUI:Window(text, preset, closebind)
    self.CloseBind = closebind or Enum.KeyCode.RightControl
    self.PresetColor = preset or Color3.fromRGB(44, 120, 224)
    local fs = false
    
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = self.ui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = self.CurrentUIBackgroundColor
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 0, 0, 0)
    Main.ClipsDescendants = true
    Main.Visible = true
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 12)
    MainCorner.Parent = Main
    
    local TabHold = Instance.new("Frame")
    TabHold.Name = "TabHold"
    TabHold.Parent = Main
    TabHold.BackgroundTransparency = 1
    TabHold.Position = UDim2.new(0.034, 0, 0.147, 0)
    TabHold.Size = UDim2.new(0, 107, 0, 254)
    
    local TabHoldStroke = Instance.new("UIStroke")
    TabHoldStroke.Parent = TabHold
    TabHoldStroke.Color = Color3.fromRGB(0, 0, 0)
    TabHoldStroke.Thickness = 1.5
    TabHoldStroke.Transparency = 0.5
    
    local TabHoldLayout = Instance.new("UIListLayout")
    TabHoldLayout.Name = "TabHoldLayout"
    TabHoldLayout.Parent = TabHold
    TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabHoldLayout.Padding = UDim.new(0, 11)
    
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = Main
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0.034, 0, 0.056, 0)
    Title.Size = UDim2.new(0, 200, 0, 23)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(68, 68, 68)
    Title.TextSize = 12
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    local DragFrame = Instance.new("Frame")
    DragFrame.Name = "DragFrame"
    DragFrame.Parent = Main
    DragFrame.BackgroundTransparency = 1
    DragFrame.Size = UDim2.new(0, 560, 0, 41)
    
    local CloseBtn = Instance.new("TextButton")
    CloseBtn.Name = "CloseBtn"
    CloseBtn.Parent = Main
    CloseBtn.BackgroundTransparency = 1
    CloseBtn.Position = UDim2.new(0.95, 0, 0.056, 0)
    CloseBtn.Size = UDim2.new(0, 20, 0, 20)
    CloseBtn.Font = Enum.Font.GothamBold
    CloseBtn.Text = "X"
    CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseBtn.TextSize = 16
    
    if game:GetService("UserInputService").TouchEnabled then
        local MobileBtn = Instance.new("ImageButton")
        MobileBtn.Name = "MobileBtn"
        MobileBtn.Parent = self.ui
        MobileBtn.BackgroundTransparency = 1
        MobileBtn.Position = UDim2.new(0.949999988, -74, 0.5, -42)
        MobileBtn.Size = UDim2.new(0, 65, 0, 65)
        MobileBtn.Image = "rbxassetid://130039636229325"
        
        local MakeDraggable = function(topbarobject, object)
            local Dragging, DragInput, DragStart, StartPosition
            local function Update(input)
                local Delta = input.Position - DragStart
                local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, 
                                    StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
                game:GetService("TweenService"):Create(object, TweenInfo.new(0.1, Enum.EasingStyle.Quad, 
                    Enum.EasingDirection.Out), {Position = pos}):Play()
            end
            
            topbarobject.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or 
                   input.UserInputType == Enum.UserInputType.Touch then
                    Dragging = true
                    DragStart = input.Position
                    StartPosition = object.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then 
                            Dragging = false 
                        end
                    end)
                end
            end)
            
            topbarobject.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or 
                   input.UserInputType == Enum.UserInputType.Touch then
                    DragInput = input
                end
            end)
            
            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if input == DragInput and Dragging then 
                    Update(input) 
                end
            end)
        end
        
        MakeDraggable(MobileBtn, MobileBtn)
        MobileBtn.MouseButton1Click:Connect(function()
            if Main.Size.X.Offset > 0 then
                game:GetService("TweenService"):Create(Main, TweenInfo.new(0.5, 
                    Enum.EasingStyle.Sine, Enum.EasingDirection.Out), 
                    {Size = UDim2.new(0, 0, 0, 0), 
                     BackgroundTransparency = Main.BackgroundTransparency}):Play()
            else
                Main.Visible = true
                game:GetService("TweenService"):Create(Main, TweenInfo.new(0.5, 
                    Enum.EasingStyle.Sine, Enum.EasingDirection.Out), 
                    {Size = UDim2.new(0, 560, 0, 319), 
                     BackgroundTransparency = Main.BackgroundTransparency}):Play()
            end
        end)
    end
    
    Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, 
                   Enum.EasingStyle.Quart, 0.6, true)
    MakeDraggable(DragFrame, Main)
    
    CloseBtn.MouseButton1Click:Connect(function()
        game:GetService("TweenService"):Create(Main, TweenInfo.new(0.5, 
            Enum.EasingStyle.Sine, Enum.EasingDirection.Out), 
            {Size = UDim2.new(0, 0, 0, 0), 
             BackgroundTransparency = Main.BackgroundTransparency}):Play()
    end)
    
    local TabFolder = Instance.new("Folder")
    TabFolder.Name = "TabFolder"
    TabFolder.Parent = Main
    
    local function createSettingsTab()
        local settingsTab = self:CreateTab("Settings")
        
        settingsTab:Toggle("Transparency", false, function(state)
            if state then
                Main.BackgroundTransparency = 0.5
                TabHoldStroke.Transparency = 1
                for _, tab in next, TabFolder:GetChildren() do
                    if tab:IsA("ScrollingFrame") and tab:FindFirstChild("UIStroke") then
                        tab.UIStroke.Transparency = 1
                    end
                end
            else
                Main.BackgroundTransparency = 0
                TabHoldStroke.Transparency = 0.5
                for _, tab in next, TabFolder:GetChildren() do
                    if tab:IsA("ScrollingFrame") and tab:FindFirstChild("UIStroke") then
                        tab.UIStroke.Transparency = 0.5
                    end
                end
            end
        end)
        
        settingsTab:Bind("Toggle UI Visibility", Enum.KeyCode.RightControl, function()
            if Main.Size.X.Offset > 0 then
                game:GetService("TweenService"):Create(Main, TweenInfo.new(0.5, 
                    Enum.EasingStyle.Sine, Enum.EasingDirection.Out), 
                    {Size = UDim2.new(0, 0, 0, 0), 
                     BackgroundTransparency = Main.BackgroundTransparency}):Play()
            else
                Main.Visible = true
                game:GetService("TweenService"):Create(Main, TweenInfo.new(0.5, 
                    Enum.EasingStyle.Sine, Enum.EasingDirection.Out), 
                    {Size = UDim2.new(0, 560, 0, 319), 
                     BackgroundTransparency = Main.BackgroundTransparency}):Play()
            end
        end)
        
        settingsTab:Colorpicker("Change Textures Color", Color3.fromRGB(44, 120, 224), 
            function(t) self:ChangePresetColor(Color3.fromRGB(t.R * 255, t.G * 255, t.B * 255)) end)
    end
    
    task.spawn(function() createSettingsTab() end)
    
    return Main
end

function QuickHacksUI:CreateTab(text)
    local tabhold = {}
    
    local TabBtn = Instance.new("TextButton")
    TabBtn.Name = "TabBtn"
    TabBtn.Parent = self.ui.FindFirstChild("Main").FindFirstChild("TabHold")
    TabBtn.BackgroundTransparency = 1
    TabBtn.Size = UDim2.new(0, 107, 0, 21)
    TabBtn.Font = Enum.Font.SourceSans
    TabBtn.Text = ""
    
    local TabTitle = Instance.new("TextLabel")
    TabTitle.Name = "TabTitle"
    TabTitle.Parent = TabBtn
    TabTitle.BackgroundTransparency = 1
    TabTitle.Size = UDim2.new(0, 107, 0, 21)
    TabTitle.Font = Enum.Font.Gotham
    TabTitle.Text = text
    TabTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
    TabTitle.TextSize = 14
    TabTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local TabBtnIndicator = Instance.new("Frame")
    TabBtnIndicator.Name = "TabBtnIndicator"
    TabBtnIndicator.Parent = TabBtn
    TabBtnIndicator.BackgroundColor3 = self.PresetColor
    TabBtnIndicator.BorderSizePixel = 0
    TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
    TabBtnIndicator.Size = UDim2.new(0, 0, 0, 2)
    
    local TabBtnIndicatorCorner = Instance.new("UICorner")
    TabBtnIndicatorCorner.Parent = TabBtnIndicator
    
    coroutine.wrap(function()
        while wait() do TabBtnIndicator.BackgroundColor3 = self.PresetColor end
    end)()
    
    local Tab = Instance.new("ScrollingFrame")
    Tab.Name = "Tab"
    Tab.Parent = self.ui.FindFirstChild("Main").FindFirstChild("TabFolder")
    Tab.Active = true
    Tab.BackgroundTransparency = 1
    Tab.BorderSizePixel = 0
    Tab.Position = UDim2.new(0.314, 0, 0.147, 0)
    Tab.Size = UDim2.new(0, 373, 0, 254)
    Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
    Tab.ScrollBarThickness = 3
    Tab.Visible = false
    
    local TabStroke = Instance.new("UIStroke")
    TabStroke.Parent = Tab
    TabStroke.Color = Color3.fromRGB(0, 0, 0)
    TabStroke.Thickness = 2.5
    TabStroke.Transparency = 0.5
    
    local TabLayout = Instance.new("UIListLayout")
    TabLayout.Name = "TabLayout"
    TabLayout.Parent = Tab
    TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabLayout.Padding = UDim.new(0, 6)
    
    local fs = false
    if not fs then
        fs = true
        TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
        TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tab.Visible = true
    end
    
    TabBtn.MouseButton1Click:Connect(function()
        for _, v in next, self.ui.FindFirstChild("Main").FindFirstChild("TabFolder"):GetChildren() do
            if v.Name == "Tab" then v.Visible = false end
            Tab.Visible = true
        end
        for _, v in next, self.ui.FindFirstChild("Main").FindFirstChild("TabHold"):GetChildren() do
            if v.Name == "TabBtn" then
                v.TabBtnIndicator:TweenSize(UDim2.new(0, 0, 0, 2), 
                    Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                TabBtnIndicator:TweenSize(UDim2.new(0, 13, 0, 2), 
                    Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                game:GetService("TweenService"):Create(v.TabTitle, 
                    TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                    {TextColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                game:GetService("TweenService"):Create(TabTitle, 
                    TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                    {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
            end
        end
    end)
    
    local tabcontent = {}
    
    function tabcontent:Button(text, callback)
        local Button = Instance.new("TextButton")
        Button.Name = "Button"
        Button.Parent = Tab
        Button.BackgroundColor3 = self.CurrentUIBackgroundColor
        Button.Size = UDim2.new(0, 363, 0, 42)
        Button.AutoButtonColor = false
        Button.Font = Enum.Font.SourceSans
        Button.Text = ""
        
        local ButtonCorner = Instance.new("UICorner")
        ButtonCorner.Parent = Button
        ButtonCorner.CornerRadius = UDim.new(0, 5)
        
        local ButtonStroke = Instance.new("UIStroke")
        ButtonStroke.Parent = Button
        ButtonStroke.Thickness = 1
        ButtonStroke.Transparency = 0.3
        ButtonStroke.Color = Color3.fromRGB(0, 0, 0)
        ButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        
        local ButtonTitle = Instance.new("TextLabel")
        ButtonTitle.Name = "ButtonTitle"
        ButtonTitle.Parent = Button
        ButtonTitle.BackgroundTransparency = 1
        ButtonTitle.Position = UDim2.new(0.036, 0, 0, 0)
        ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
        ButtonTitle.Font = Enum.Font.Gotham
        ButtonTitle.Text = text or "Unnamed Button"
        ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        ButtonTitle.TextSize = 14
        ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
        
        Button.MouseEnter:Connect(function()
            game:GetService("TweenService"):Create(Button, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
        end)
        
        Button.MouseLeave:Connect(function()
            game:GetService("TweenService"):Create(Button, 
                TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {BackgroundColor3 = self.CurrentUIBackgroundColor}):Play()
        end)
        
        Button.MouseButton1Click:Connect(function()
            game:GetService("TweenService"):Create(Button, 
                TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {Position = UDim2.new(0.02, 0, 0, 0)}):Play()
            task.wait(0.1)
            game:GetService("TweenService"):Create(Button, 
                TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {Position = UDim2.new(0, 0, 0, 0)}):Play()
            pcall(callback)
        end)
        
        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
    end
    
    function tabcontent:Toggle(text, default, callback)
        local toggled = default or false
        local Toggle = Instance.new("TextButton")
        Toggle.Name = "Toggle"
        Toggle.Parent = Tab
        Toggle.BackgroundColor3 = self.CurrentUIBackgroundColor
        Toggle.Size = UDim2.new(0, 363, 0, 42)
        Toggle.AutoButtonColor = false
        Toggle.Font = Enum.Font.SourceSans
        Toggle.Text = ""
        
        local ToggleCorner = Instance.new("UICorner")
        ToggleCorner.Parent = Toggle
        ToggleCorner.CornerRadius = UDim.new(0, 5)
        
        local ToggleStroke = Instance.new("UIStroke")
        ToggleStroke.Parent = Toggle
        ToggleStroke.Thickness = 1.2
        ToggleStroke.Transparency = 0.2
        ToggleStroke.Color = Color3.fromRGB(0, 0, 0)
        ToggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        
        local ToggleTitle = Instance.new("TextLabel")
        ToggleTitle.Name = "ToggleTitle"
        ToggleTitle.Parent = Toggle
        ToggleTitle.BackgroundTransparency = 1
        ToggleTitle.Position = UDim2.new(0.036, 0, 0, 0)
        ToggleTitle.Size = UDim2.new(0, 187, 0, 42)
        ToggleTitle.Font = Enum.Font.Gotham
        ToggleTitle.Text = text or "Unnamed Toggle"
        ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        ToggleTitle.TextSize = 14
        ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
        
        local FrameToggle1 = Instance.new("Frame")
        FrameToggle1.Name = "FrameToggle1"
        FrameToggle1.Parent = Toggle
        FrameToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        FrameToggle1.Position = UDim2.new(0.86, 0, 0.286, 0)
        FrameToggle1.Size = UDim2.new(0, 37, 0, 18)
        
        local FrameToggle1Corner = Instance.new("UICorner")
        FrameToggle1Corner.Parent = FrameToggle1

        local FrameToggle2 = Instance.new("Frame")
FrameToggle2.Name = "FrameToggle2"
FrameToggle2.Parent = FrameToggle1
FrameToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
FrameToggle2.Position = UDim2.new(0.049, 0, 0.093, 0)
FrameToggle2.Size = UDim2.new(0, 33, 0, 14)

local FrameToggle2Corner = Instance.new("UICorner")
FrameToggle2Corner.Parent = FrameToggle2

local FrameToggle3 = Instance.new("Frame")
FrameToggle3.Name = "FrameToggle3"
FrameToggle3.Parent = FrameToggle1
FrameToggle3.BackgroundColor3 = self.PresetColor
FrameToggle3.BackgroundTransparency = 1
FrameToggle3.Size = UDim2.new(0, 37, 0, 18)

local FrameToggle3Corner = Instance.new("UICorner")
FrameToggle3Corner.Parent = FrameToggle3

local FrameToggleCircle = Instance.new("Frame")
FrameToggleCircle.Name = "FrameToggleCircle"
FrameToggleCircle.Parent = FrameToggle1
FrameToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FrameToggleCircle.Position = UDim2.new(0.127, 0, 0.222, 0)
FrameToggleCircle.Size = UDim2.new(0, 10, 0, 10)

local FrameToggleCircleCorner = Instance.new("UICorner")
FrameToggleCircleCorner.Parent = FrameToggleCircle

coroutine.wrap(function()
    while wait() do FrameToggle3.BackgroundColor3 = self.PresetColor end
end)()

Toggle.MouseButton1Click:Connect(function()
    if toggled == false then
        game:GetService("TweenService"):Create(Toggle, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
        game:GetService("TweenService"):Create(FrameToggle1, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 1}):Play()
        game:GetService("TweenService"):Create(FrameToggle2, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 1}):Play()
        game:GetService("TweenService"):Create(FrameToggle3, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 0}):Play()
        game:GetService("TweenService"):Create(FrameToggleCircle, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
        FrameToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222, 0), 
            Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
    else
        game:GetService("TweenService"):Create(Toggle, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundColor3 = self.CurrentUIBackgroundColor}):Play()
        game:GetService("TweenService"):Create(FrameToggle1, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 0}):Play()
        game:GetService("TweenService"):Create(FrameToggle2, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 0}):Play()
        game:GetService("TweenService"):Create(FrameToggle3, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 1}):Play()
        game:GetService("TweenService"):Create(FrameToggleCircle, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
        FrameToggleCircle:TweenPosition(UDim2.new(0.127, 0, 0.222, 0), 
            Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
    end
    toggled = not toggled
    pcall(callback, toggled)
end)

if default then
    game:GetService("TweenService"):Create(Toggle, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
        {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
    game:GetService("TweenService"):Create(FrameToggle1, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
        {BackgroundTransparency = 1}):Play()
    game:GetService("TweenService"):Create(FrameToggle2, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
        {BackgroundTransparency = 1}):Play()
    game:GetService("TweenService"):Create(FrameToggle3, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
        {BackgroundTransparency = 0}):Play()
    game:GetService("TweenService"):Create(FrameToggleCircle, 
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
        {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
    FrameToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222, 0), 
        Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
    toggled = true
    pcall(callback, true)
end

Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

function tabcontent:Slider(text, min, max, start, callback)
    local dragging = false
    local Slider = Instance.new("TextButton")
    Slider.Name = "Slider"
    Slider.Parent = Tab
    Slider.BackgroundColor3 = self.CurrentUIBackgroundColor
    Slider.Size = UDim2.new(0, 363, 0, 60)
    Slider.AutoButtonColor = false
    Slider.Font = Enum.Font.SourceSans
    Slider.Text = ""
    
    local SliderCorner = Instance.new("UICorner")
    SliderCorner.Parent = Slider
    SliderCorner.CornerRadius = UDim.new(0, 5)
    
    local SliderStroke = Instance.new("UIStroke")
    SliderStroke.Parent = Slider
    SliderStroke.Thickness = 0.9
    SliderStroke.Transparency = 0.3
    SliderStroke.Color = Color3.fromRGB(0,0,0)
    SliderStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local SliderTitle = Instance.new("TextLabel")
    SliderTitle.Name = "SliderTitle"
    SliderTitle.Parent = Slider
    SliderTitle.BackgroundTransparency = 1
    SliderTitle.Position = UDim2.new(0.035, 0, 0, 0)
    SliderTitle.Size = UDim2.new(0, 187, 0, 42)
    SliderTitle.Font = Enum.Font.Gotham
    SliderTitle.Text = text or "Unnamed Slider"
    SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderTitle.TextSize = 14
    SliderTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local SliderValue = Instance.new("TextLabel")
    SliderValue.Name = "SliderValue"
    SliderValue.Parent = Slider
    SliderValue.BackgroundTransparency = 1
    SliderValue.Position = UDim2.new(0.035, 0, 0, 0)
    SliderValue.Size = UDim2.new(0, 335, 0, 42)
    SliderValue.Font = Enum.Font.Gotham
    SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
    SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderValue.TextSize = 14
    SliderValue.TextXAlignment = Enum.TextXAlignment.Right
    
    local SlideFrame = Instance.new("Frame")
    SlideFrame.Name = "SlideFrame"
    SlideFrame.Parent = Slider
    SlideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    SlideFrame.BorderSizePixel = 0
    SlideFrame.Position = UDim2.new(0.034, 0, 0.686, 0)
    SlideFrame.Size = UDim2.new(0, 335, 0, 3)
    
    local CurrentValueFrame = Instance.new("Frame")
    CurrentValueFrame.Name = "CurrentValueFrame"
    CurrentValueFrame.Parent = SlideFrame
    CurrentValueFrame.BackgroundColor3 = self.PresetColor
    CurrentValueFrame.BorderSizePixel = 0
    CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)
    
    local SlideCircle = Instance.new("ImageButton")
    SlideCircle.Name = "SlideCircle"
    SlideCircle.Parent = SlideFrame
    SlideCircle.BackgroundTransparency = 1
    SlideCircle.Position = UDim2.new((start or 0) / max, -6, -1.304, 0)
    SlideCircle.Size = UDim2.new(0, 11, 0, 11)
    SlideCircle.Image = "rbxassetid://3570695787"
    SlideCircle.ImageColor3 = self.PresetColor
    
    coroutine.wrap(function()
        while wait() do
            CurrentValueFrame.BackgroundColor3 = self.PresetColor
            SlideCircle.ImageColor3 = self.PresetColor
        end
    end)()
    
    local function move(input)
        local posX = math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / 
            SlideFrame.AbsoluteSize.X, 0, 1)
        local value = math.floor((posX * (max - min)) + min)
        SlideCircle.Position = UDim2.new(posX, -6, -1.304, 0)
        CurrentValueFrame.Size = UDim2.new(posX, 0, 0, 3)
        SliderValue.Text = tostring(value)
        pcall(callback, value)
    end
    
    SlideCircle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            move(input)
        end
    end)
    
    SlideCircle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
           input.UserInputType == Enum.UserInputType.Touch) then
            move(input)
        end
    end)
    
    Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

function tabcontent:Dropdown(text, list, callback)
    local droptog = false
    local framesize = 0
    local itemcount = 0
    
    local Dropdown = Instance.new("Frame")
    Dropdown.Name = "Dropdown"
    Dropdown.Parent = Tab
    Dropdown.BackgroundColor3 = self.CurrentUIBackgroundColor
    Dropdown.BackgroundTransparency = 0.2
    Dropdown.ClipsDescendants = true
    Dropdown.Size = UDim2.new(0, 363, 0, 42)
    
    local DropdownCorner = Instance.new("UICorner")
    DropdownCorner.Parent = Dropdown
    DropdownCorner.CornerRadius = UDim.new(0, 5)
    
    local DropdownStroke = Instance.new("UIStroke")
    DropdownStroke.Parent = Dropdown
    DropdownStroke.Thickness = 0.9
    DropdownStroke.Transparency = 0.2
    DropdownStroke.Color = Color3.fromRGB(0,0,0)
    DropdownStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local DropdownBtn = Instance.new("TextButton")
    DropdownBtn.Name = "DropdownBtn"
    DropdownBtn.Parent = Dropdown
    DropdownBtn.BackgroundTransparency = 1
    DropdownBtn.Size = UDim2.new(0, 363, 0, 42)
    DropdownBtn.Font = Enum.Font.SourceSans
    DropdownBtn.Text = ""
    
    local DropdownTitle = Instance.new("TextLabel")
    DropdownTitle.Name = "DropdownTitle"
    DropdownTitle.Parent = Dropdown
    DropdownTitle.BackgroundTransparency = 1
    DropdownTitle.Position = UDim2.new(0.036, 0, 0, 0)
    DropdownTitle.Size = UDim2.new(0, 187, 0, 42)
    DropdownTitle.Font = Enum.Font.Gotham
    DropdownTitle.Text = text or "Unnamed Dropdown"
    DropdownTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownTitle.TextSize = 14
    DropdownTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local ArrowImg = Instance.new("ImageLabel")
    ArrowImg.Name = "ArrowImg"
    ArrowImg.Parent = DropdownTitle
    ArrowImg.BackgroundTransparency = 1
    ArrowImg.Position = UDim2.new(1.652, 0, 0.19, 0)
    ArrowImg.Size = UDim2.new(0, 26, 0, 26)
    ArrowImg.Image = "rbxassetid://6034818375"
    
    local DropItemHolder = Instance.new("ScrollingFrame")
    DropItemHolder.Name = "DropItemHolder"
    DropItemHolder.Parent = DropdownTitle
    DropItemHolder.Active = true
    DropItemHolder.BackgroundTransparency = 1
    DropItemHolder.BorderSizePixel = 0
    DropItemHolder.Position = UDim2.new(-0.004, 0, 1.05, 0)
    DropItemHolder.Size = UDim2.new(0, 342, 0, 0)
    DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
    DropItemHolder.ScrollBarThickness = 3
    
    local DropLayout = Instance.new("UIListLayout")
    DropLayout.Name = "DropLayout"
    DropLayout.Parent = DropItemHolder
    DropLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    DropdownBtn.MouseButton1Click:Connect(function()
        if droptog == false then
            Dropdown:TweenSize(UDim2.new(0, 363, 0, 55 + framesize), 
                Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
            game:GetService("TweenService"):Create(ArrowImg, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {Rotation = 270}):Play()
            task.wait(0.2)
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        else
            Dropdown:TweenSize(UDim2.new(0, 363, 0, 42), 
                Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
            game:GetService("TweenService"):Create(ArrowImg, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {Rotation = 0}):Play()
            task.wait(0.2)
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end
        droptog = not droptog
    end)
    
    for _, v in next, list do
        itemcount = itemcount + 1
        if itemcount <= 5 then
            framesize = framesize + 26
            DropItemHolder.Size = UDim2.new(0, 342, 0, framesize)
        end
        
        local Item = Instance.new("TextButton")
        Item.Name = "Item"
        Item.Parent = DropItemHolder
        Item.BackgroundColor3 = self.CurrentUIBackgroundColor
        Item.ClipsDescendants = true
        Item.Size = UDim2.new(0, 335, 0, 25)
        Item.AutoButtonColor = false
        Item.Font = Enum.Font.Gotham
        Item.Text = v
        Item.TextColor3 = Color3.fromRGB(255, 255, 255)
        Item.TextSize = 15
        
        local ItemCorner = Instance.new("UICorner")
        ItemCorner.Parent = Item
        ItemCorner.CornerRadius = UDim.new(0, 4)
        
        local ItemStroke = Instance.new("UIStroke")
        ItemStroke.Parent = Item
        ItemStroke.Thickness = 0.9
        ItemStroke.Transparency = 0.3
        ItemStroke.Color = Color3.fromRGB(0,0,0)
        ItemStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        
        Item.MouseEnter:Connect(function()
            game:GetService("TweenService"):Create(Item, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
        end)
        
        Item.MouseLeave:Connect(function()
            game:GetService("TweenService"):Create(Item, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {BackgroundColor3 = self.CurrentUIBackgroundColor}):Play()
        end)
        
        Item.MouseButton1Click:Connect(function()
            droptog = false
            DropdownTitle.Text = text .. " - " .. v
            pcall(callback, v)
            Dropdown:TweenSize(UDim2.new(0, 363, 0, 42), 
                Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
            game:GetService("TweenService"):Create(ArrowImg, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {Rotation = 0}):Play()
            task.wait(0.2)
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end)
        
        DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)
    end
    
    Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

function tabcontent:Colorpicker(text, preset, callback)
    local ColorPickerToggled = false
    local OldToggleColor = Color3.fromRGB(0, 0, 0)
    local OldColor = Color3.fromRGB(0, 0, 0)
    local OldColorSelectionPosition = nil
    local OldHueSelectionPosition = nil
    local ColorH, ColorS, ColorV = 1, 1, 1
    local RainbowColorPicker = false
    local ColorInput, HueInput
    
    local Colorpicker = Instance.new("Frame")
    Colorpicker.Name = "Colorpicker"
    Colorpicker.Parent = Tab
    Colorpicker.BackgroundColor3 = self.CurrentUIBackgroundColor
    Colorpicker.ClipsDescendants = true
    Colorpicker.Size = UDim2.new(0, 363, 0, 42)
    
    local ColorpickerCorner = Instance.new("UICorner")
    ColorpickerCorner.Parent = Colorpicker
    ColorpickerCorner.CornerRadius = UDim.new(0, 5)
    
    local ColorpickerStroke = Instance.new("UIStroke")
    ColorpickerStroke.Parent = Colorpicker
    ColorpickerStroke.Thickness = 0.9
    ColorpickerStroke.Transparency = 0.3
    ColorpickerStroke.Color = Color3.fromRGB(0,0,0)
    ColorpickerStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local ColorpickerTitle = Instance.new("TextLabel")
    ColorpickerTitle.Name = "ColorpickerTitle"
    ColorpickerTitle.Parent = Colorpicker
    ColorpickerTitle.BackgroundTransparency = 1
    ColorpickerTitle.Position = UDim2.new(0.035, 0, 0, 0)
    ColorpickerTitle.Size = UDim2.new(0, 187, 0, 42)
    ColorpickerTitle.Font = Enum.Font.Gotham
    ColorpickerTitle.Text = text or "Unnamed Colorpicker"
    ColorpickerTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerTitle.TextSize = 14
    ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local BoxColor = Instance.new("Frame")
    BoxColor.Name = "BoxColor"
    BoxColor.Parent = ColorpickerTitle
    BoxColor.BackgroundColor3 = preset
    BoxColor.Position = UDim2.new(1.604, 0, 0.214, 0)
    BoxColor.Size = UDim2.new(0, 41, 0, 23)
    
    local BoxColorCorner = Instance.new("UICorner")
    BoxColorCorner.Parent = BoxColor
    BoxColorCorner.CornerRadius = UDim.new(0, 5)
    
    local ColorpickerBtn = Instance.new("TextButton")
    ColorpickerBtn.Name = "ColorpickerBtn"
    ColorpickerBtn.Parent = ColorpickerTitle
    ColorpickerBtn.BackgroundTransparency = 1
    ColorpickerBtn.Size = UDim2.new(0, 363, 0, 42)
    ColorpickerBtn.Font = Enum.Font.SourceSans
    ColorpickerBtn.Text = ""
    
    local RainbowToggle = Instance.new("TextButton")
    RainbowToggle.Name = "RainbowToggle"
    RainbowToggle.Parent = ColorpickerTitle
    RainbowToggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
    RainbowToggle.Position = UDim2.new(1.263, 0, 1.09, 0)
    RainbowToggle.Size = UDim2.new(0, 104, 0, 32)
    RainbowToggle.AutoButtonColor = false
    RainbowToggle.Font = Enum.Font.SourceSans
    RainbowToggle.Text = ""
    
local RainbowToggleCorner = Instance.new("UICorner")
RainbowToggleCorner.Parent = RainbowToggle
RainbowToggleCorner.CornerRadius = UDim.new(0, 5)

local RainbowToggleTitle = Instance.new("TextLabel")
RainbowToggleTitle.Name = "RainbowToggleTitle"
RainbowToggleTitle.Parent = RainbowToggle
RainbowToggleTitle.BackgroundTransparency = 1
RainbowToggleTitle.Size = UDim2.new(0, 33, 0, 32)
RainbowToggleTitle.Font = Enum.Font.Gotham
RainbowToggleTitle.Text = "Rainbow"
RainbowToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
RainbowToggleTitle.TextSize = 14
RainbowToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

local FrameRainbowToggle1 = Instance.new("Frame")
FrameRainbowToggle1.Name = "FrameRainbowToggle1"
FrameRainbowToggle1.Parent = RainbowToggle
FrameRainbowToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FrameRainbowToggle1.Position = UDim2.new(0.65, 0, 0.186, 0)
FrameRainbowToggle1.Size = UDim2.new(0, 37, 0, 18)

local FrameRainbowToggle1Corner = Instance.new("UICorner")
FrameRainbowToggle1Corner.Parent = FrameRainbowToggle1

local FrameRainbowToggle2 = Instance.new("Frame")
FrameRainbowToggle2.Name = "FrameRainbowToggle2"
FrameRainbowToggle2.Parent = FrameRainbowToggle1
FrameRainbowToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
FrameRainbowToggle2.Position = UDim2.new(0.059, 0, 0.093, 0)
FrameRainbowToggle2.Size = UDim2.new(0, 33, 0, 14)

local FrameRainbowToggle2Corner = Instance.new("UICorner")
FrameRainbowToggle2Corner.Parent = FrameRainbowToggle2

local FrameRainbowToggle3 = Instance.new("Frame")
FrameRainbowToggle3.Name = "FrameRainbowToggle3"
FrameRainbowToggle3.Parent = FrameRainbowToggle1
FrameRainbowToggle3.BackgroundColor3 = self.PresetColor
FrameRainbowToggle3.BackgroundTransparency = 1
FrameRainbowToggle3.Size = UDim2.new(0, 37, 0, 18)

local FrameToggle3 = Instance.new("UICorner")
FrameToggle3.Parent = FrameRainbowToggle3

local FrameRainbowToggleCircle = Instance.new("Frame")
FrameRainbowToggleCircle.Name = "FrameRainbowToggleCircle"
FrameRainbowToggleCircle.Parent = FrameRainbowToggle1
FrameRainbowToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FrameRainbowToggleCircle.Position = UDim2.new(0.127, 0, 0.222, 0)
FrameRainbowToggleCircle.Size = UDim2.new(0, 10, 0, 10)

local FrameRainbowToggleCircleCorner = Instance.new("UICorner")
FrameRainbowToggleCircleCorner.Parent = FrameRainbowToggleCircle

local Color = Instance.new("ImageLabel")
Color.Name = "Color"
Color.Parent = ColorpickerTitle
Color.BackgroundColor3 = preset
Color.Position = UDim2.new(0, 0, 0, 42)
Color.Size = UDim2.new(0, 194, 0, 80)
Color.ZIndex = 10
Color.Image = "rbxassetid://4155801252"

local ColorCorner = Instance.new("UICorner")
ColorCorner.Parent = Color
ColorCorner.CornerRadius = UDim.new(0, 3)

local ColorSelection = Instance.new("ImageLabel")
ColorSelection.Name = "ColorSelection"
ColorSelection.Parent = Color
ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
ColorSelection.BackgroundTransparency = 1
ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)) or 0.5, 0, 0.5, 0)
ColorSelection.Size = UDim2.new(0, 18, 0, 18)
ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
ColorSelection.ScaleType = Enum.ScaleType.Fit
ColorSelection.Visible = false

local Hue = Instance.new("ImageLabel")
Hue.Name = "Hue"
Hue.Parent = ColorpickerTitle
Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Hue.Position = UDim2.new(0, 202, 0, 42)
Hue.Size = UDim2.new(0, 25, 0, 80)

local HueCorner = Instance.new("UICorner")
HueCorner.Parent = Hue
HueCorner.CornerRadius = UDim.new(0, 3)

local HueGradient = Instance.new("UIGradient")
HueGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 4)),
    ColorSequenceKeypoint.new(0.2, Color3.fromRGB(234, 255, 0)),
    ColorSequenceKeypoint.new(0.4, Color3.fromRGB(21, 255, 0)),
    ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 255)),
    ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 17, 255)),
    ColorSequenceKeypoint.new(0.9, Color3.fromRGB(255, 0, 251)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 4))
}
HueGradient.Rotation = 270
HueGradient.Parent = Hue

local HueSelection = Instance.new("ImageLabel")
HueSelection.Name = "HueSelection"
HueSelection.Parent = Hue
HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
HueSelection.BackgroundTransparency = 1
HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
HueSelection.Size = UDim2.new(0, 18, 0, 18)
HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
HueSelection.Visible = false

ColorpickerBtn.MouseButton1Click:Connect(function()
    if ColorPickerToggled == false then
        ColorSelection.Visible = true
        HueSelection.Visible = true
        Colorpicker:TweenSize(UDim2.new(0, 363, 0, 132), 
            Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
        task.wait(0.2)
        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
    else
        ColorSelection.Visible = false
        HueSelection.Visible = false
        Colorpicker:TweenSize(UDim2.new(0, 363, 0, 42), 
            Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
        task.wait(0.2)
        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
    end
    ColorPickerToggled = not ColorPickerToggled
end)

local function UpdateColorPicker()
    BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
    Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
    pcall(callback, BoxColor.BackgroundColor3)
end

ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / 
    Hue.AbsoluteSize.Y)
ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / 
    Color.AbsoluteSize.X)
ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / 
    Color.AbsoluteSize.Y)

BoxColor.BackgroundColor3 = preset
Color.BackgroundColor3 = preset
pcall(callback, preset)

local function moveColor(input)
    if not RainbowColorPicker and ColorPickerToggled then
        local ColorX = math.clamp((input.Position.X - Color.AbsolutePosition.X) / 
            Color.AbsoluteSize.X, 0, 1)
        local ColorY = math.clamp((input.Position.Y - Color.AbsolutePosition.Y) / 
            Color.AbsoluteSize.Y, 0, 1)
        game:GetService("TweenService"):Create(ColorSelection, 
            TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {Position = UDim2.new(ColorX, 0, ColorY, 0)}):Play()
        ColorS = ColorX
        ColorV = 1 - ColorY
        UpdateColorPicker()
    end
end

local function moveHue(input)
    if not RainbowColorPicker and ColorPickerToggled then
        local HueY = math.clamp((input.Position.Y - Hue.AbsolutePosition.Y) / 
            Hue.AbsoluteSize.Y, 0, 1)
        game:GetService("TweenService"):Create(HueSelection, 
            TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {Position = UDim2.new(0.48, 0, HueY, 0)}):Play()
        ColorH = 1 - HueY
        UpdateColorPicker()
    end
end

Color.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        if ColorInput then ColorInput:Disconnect() end
        ColorInput = game:GetService("RunService").RenderStepped:Connect(function() 
            moveColor(input) 
        end)
    end
end)

Color.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        if ColorInput then ColorInput:Disconnect() end
    end
end)

Hue.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        if HueInput then HueInput:Disconnect() end
        HueInput = game:GetService("RunService").RenderStepped:Connect(function() 
            moveHue(input) 
        end)
    end
end)

Hue.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        if HueInput then HueInput:Disconnect() end
    end
end)

RainbowToggle.MouseButton1Down:Connect(function()
    RainbowColorPicker = not RainbowColorPicker
    if ColorInput then ColorInput:Disconnect() end
    if HueInput then HueInput:Disconnect() end
    
    if RainbowColorPicker then
        game:GetService("TweenService"):Create(FrameRainbowToggle1, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 1}):Play()
        game:GetService("TweenService"):Create(FrameRainbowToggle2, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 1}):Play()
        game:GetService("TweenService"):Create(FrameRainbowToggle3, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 0}):Play()
        game:GetService("TweenService"):Create(FrameRainbowToggleCircle, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
        FrameRainbowToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222, 0), 
            Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
        
        OldToggleColor = BoxColor.BackgroundColor3
        OldColor = Color.BackgroundColor3
        OldColorSelectionPosition = ColorSelection.Position
        OldHueSelectionPosition = HueSelection.Position
        
        while RainbowColorPicker do
            local hue = self.RainbowColorValue
            BoxColor.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
            if ColorPickerToggled then
                Color.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
                HueSelection.Position = UDim2.new(0.48, 0, hue, 0)
                ColorSelection.Position = UDim2.new(1, 0, 0, 0)
            end
            pcall(callback, BoxColor.BackgroundColor3)
            task.wait()
        end
    else
        game:GetService("TweenService"):Create(FrameRainbowToggle1, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 0}):Play()
        game:GetService("TweenService"):Create(FrameRainbowToggle2, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 0}):Play()
        game:GetService("TweenService"):Create(FrameRainbowToggle3, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundTransparency = 1}):Play()
        game:GetService("TweenService"):Create(FrameRainbowToggleCircle, 
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
            {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
        FrameRainbowToggleCircle:TweenPosition(UDim2.new(0.127, 0, 0.222, 0), 
            Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
        
        BoxColor.BackgroundColor3 = OldToggleColor
        Color.BackgroundColor3 = OldColor
        ColorSelection.Position = OldColorSelectionPosition
        HueSelection.Position = OldHueSelectionPosition
        pcall(callback, BoxColor.BackgroundColor3)
    end
end)

Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

function tabcontent:Label(text)
    local Label = Instance.new("TextButton")
    Label.Name = "Label"
    Label.Parent = Tab
    Label.BackgroundColor3 = self.CurrentUIBackgroundColor
    Label.Size = UDim2.new(0, 363, 0, 42)
    Label.AutoButtonColor = false
    Label.Font = Enum.Font.SourceSans
    Label.Text = ""
    
    local LabelCorner = Instance.new("UICorner")
    LabelCorner.Parent = Label
    LabelCorner.CornerRadius = UDim.new(0, 5)
    
    local LabelStroke = Instance.new("UIStroke")
    LabelStroke.Parent = Label
    LabelStroke.Thickness = 0.9
    LabelStroke.Transparency = 0.3
    LabelStroke.Color = Color3.fromRGB(0,0,0)
    LabelStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local LabelTitle = Instance.new("TextLabel")
    LabelTitle.Name = "LabelTitle"
    LabelTitle.Parent = Label
    LabelTitle.BackgroundTransparency = 1
    LabelTitle.Position = UDim2.new(0.036, 0, 0, 0)
    LabelTitle.Size = UDim2.new(0, 187, 0, 42)
    LabelTitle.Font = Enum.Font.Gotham
    LabelTitle.Text = text or "Unnamed Label"
    LabelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    LabelTitle.TextSize = 14
    LabelTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

function tabcontent:Textbox(text, disapper, callback)
    local Textbox = Instance.new("Frame")
    Textbox.Name = "Textbox"
    Textbox.Parent = Tab
    Textbox.BackgroundColor3 = self.CurrentUIBackgroundColor
    Textbox.ClipsDescendants = true
    Textbox.Size = UDim2.new(0, 363, 0, 42)
    
    local TextboxCorner = Instance.new("UICorner")
    TextboxCorner.Parent = Textbox
    TextboxCorner.CornerRadius = UDim.new(0, 5)
    
    local TextboxStroke = Instance.new("UIStroke")
    TextboxStroke.Parent = Textbox
    TextboxStroke.Thickness = 0.9
    TextboxStroke.Transparency = 0.3
    TextboxStroke.Color = Color3.fromRGB(0,0,0)
    TextboxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local TextboxTitle = Instance.new("TextLabel")
    TextboxTitle.Name = "TextboxTitle"
    TextboxTitle.Parent = Textbox
    TextboxTitle.BackgroundTransparency = 1
    TextboxTitle.Position = UDim2.new(0.036, 0, 0, 0)
    TextboxTitle.Size = UDim2.new(0, 187, 0, 42)
    TextboxTitle.Font = Enum.Font.Gotham
    TextboxTitle.Text = text or "Unnamed Textbox"
    TextboxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextboxTitle.TextSize = 14
    TextboxTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local TextboxFrame = Instance.new("Frame")
    TextboxFrame.Name = "TextboxFrame"
    TextboxFrame.Parent = TextboxTitle
    TextboxFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
    TextboxFrame.Position = UDim2.new(1.289, 0, 0.214, 0)
    TextboxFrame.Size = UDim2.new(0, 100, 0, 23)
    
    local TextboxFrameCorner = Instance.new("UICorner")
    TextboxFrameCorner.Parent = TextboxFrame
    TextboxFrameCorner.CornerRadius = UDim.new(0, 5)
    
    local TextBox = Instance.new("TextBox")
    TextBox.Parent = TextboxFrame
    TextBox.BackgroundTransparency = 1
    TextBox.Size = UDim2.new(0, 100, 0, 23)
    TextBox.Font = Enum.Font.Gotham
    TextBox.Text = ""
    TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.TextSize = 14
    
    TextBox.FocusLost:Connect(function(ep)
        if ep and #TextBox.Text > 0 then
            pcall(callback, TextBox.Text)
            if disapper then TextBox.Text = "" end
        end
    end)
    
    Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

function tabcontent:Bind(text, keypreset, callback)
    local Key = keypreset.Name
    local Binding = false
    
    local Bind = Instance.new("TextButton")
    Bind.Name = "Bind"
    Bind.Parent = Tab
    Bind.BackgroundColor3 = self.CurrentUIBackgroundColor
    Bind.Size = UDim2.new(0, 363, 0, 42)
    Bind.AutoButtonColor = false
    Bind.Font = Enum.Font.SourceSans
    Bind.Text = ""
    
    local BindCorner = Instance.new("UICorner")
    BindCorner.Parent = Bind
    BindCorner.CornerRadius = UDim.new(0, 5)
    
    local BindStroke = Instance.new("UIStroke")
    BindStroke.Parent = Bind
    BindStroke.Thickness = 0.9
    BindStroke.Transparency = 0.3
    BindStroke.Color = Color3.fromRGB(0,0,0)
    BindStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    
    local BindTitle = Instance.new("TextLabel")
    BindTitle.Name = "BindTitle"
    BindTitle.Parent = Bind
    BindTitle.BackgroundTransparency = 1
    BindTitle.Position = UDim2.new(0.036, 0, 0, 0)
    BindTitle.Size = UDim2.new(0, 187, 0, 42)
    BindTitle.Font = Enum.Font.Gotham
    BindTitle.Text = text or "Unnamed Bind"
    BindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    BindTitle.TextSize = 14
    BindTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local BindText = Instance.new("TextLabel")
    BindText.Name = "BindText"
    BindText.Parent = Bind
    BindText.BackgroundTransparency = 1
    BindText.Position = UDim2.new(0.036, 0, 0, 0)
    BindText.Size = UDim2.new(0, 337, 0, 42)
    BindText.Font = Enum.Font.Gotham
    BindText.Text = Key
    BindText.TextColor3 = Color3.fromRGB(255, 255, 255)
    BindText.TextSize = 14
    BindText.TextXAlignment = Enum.TextXAlignment.Right
    
    Bind.MouseButton1Click:Connect(function()
        if not Binding then
            Binding = true
            BindText.Text = ""
            
            local dots = 0
            local animationTask
            animationTask = task.spawn(function()
                while Binding do
                    if dots == 0 then
                        BindText.Text = "."
                    elseif dots == 1 then
                        BindText.Text = ".."
                    elseif dots == 2 then
                        BindText.Text = "..."
                    end
                    dots = (dots + 1) % 3
                    task.wait(0.3)
                end
            end)
            
            local inputEvent
            inputEvent = game:GetService("UserInputService").InputBegan:Connect(function(input)
                local newKey
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    newKey = input.KeyCode.Name
                elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
                    newKey = "MouseLeft"
                elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
                    newKey = "MouseRight"
                end
                
                if newKey and newKey ~= "Unknown" then
                    Binding = false
                    BindText.Text = newKey
                    Key = newKey
                    inputEvent:Disconnect()
                    if animationTask then
                        task.cancel(animationTask)
                    end
                end
            end)
        end
    end)
    
    game:GetService("UserInputService").InputBegan:Connect(function(input)
        if not Binding and input.KeyCode.Name == Key then
            pcall(callback, input.KeyCode.Name)
        elseif not Binding and Key == "MouseLeft" and 
           input.UserInputType == Enum.UserInputType.MouseButton1 then
            pcall(callback, "MouseLeft")
        elseif not Binding and Key == "MouseRight" and 
           input.UserInputType == Enum.UserInputType.MouseButton2 then
            pcall(callback, "MouseRight")
        end
    end)
    
    Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
end

return tabcontent
end

local originalTab = tabhold.Tab
tabhold.Tab = function(self, text)
    local tab = originalTab(self, text)
    return tab
end

task.spawn(function()
    wait()
    createSettingsTab()
end)

return tabhold
end

return QuickHacksUI
